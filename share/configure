#!/bin/sh

config="config.h"
test -e "src" && config="src/$config"

unset host prefix

for opt in "$@"
do
	if [ -z "$optname" ] ; then
		if [ "$opt" != "${opt%%=*}" ] ; then
			optname=${opt%%=*}
			opt=${opt#*=} 
		else
			optname="$opt"
			unset opt
		fi
	fi

	case "$optname" in
		--build)
			test -z "$opt" && continue ; build="$opt" ;;
		--host)
			test -z "$opt" && continue ; host="$opt" ;;
		--prefix)
			test -z "$opt" && continue ; prefix="$opt" ;;
		*)
			echo "invalid option $optname"
			exit 1
			;;
	esac

	unset optname
done

test ! -z $optname && echo "'$optname' requires parameter" && exit 1

test -z "$prefix" && prefix="/usr/bin"

unset BMAKE_DECL

cat <<EOF > "$config"
#ifndef CONFIG_H
#define CONFIG_H
EOF

if [ -e mktests/[0-9][0-9]* ] ; then
	for script in mktests/[0-9][0-9]*
	do
		rm -f mktests/tmp*
		. $script || exit $?
	done
	rm -f mktests/tmp*
fi

echo "#endif" >> "$config"

reconf="$0"
for param in "$@" ; do reconf="$reconf '$param'" ; done
echo "$reconf" > config.status
chmod +x config.status

if [ -e "$make" ] ; then
	if ! rm -f "$make" < /dev/null > /dev/null 2> /dev/null ; then
		echo Unable to remove "$make"
		exit
	fi
fi

cat <<EOF > "Makefile"
# autogenerated by configure script
bmake_CFLAGS = 
bmake_LDFLAGS = 
bmake_reconfigure = $reconf
bmake_PREFIX = $prefix
$BMAKE_DECL
# end autogenerated content
EOF

cat "Makefile.in" >> "Makefile"

cat <<EOF >> "Makefile"
# autogenerated by configure script
bmake-all:

bmake-clean:
	rm Makefile $config
# end autogenerated content
EOF
